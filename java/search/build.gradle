plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.5.3"
    id("io.micronaut.test-resources") version "3.5.3"
}

version = "0.1"
group = "org.buildfest2022"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.mongodb:micronaut-mongo-reactive")
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation("io.micronaut.reactor:micronaut-reactor-http-client")
    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation("edu.stanford.nlp:stanford-corenlp:4.5.1")
    implementation("edu.stanford.nlp:stanford-corenlp:4.5.1:models")
    implementation('org.mongodb:mongodb-crypt:1.5.2')
    implementation('org.mongodb:mongodb-driver-sync:4.7.1')

    runtimeOnly("ch.qos.logback:logback-classic")
    compileOnly("org.graalvm.nativeimage:svm")

    implementation("io.micronaut:micronaut-validation")
    testImplementation("io.micronaut.mongodb:micronaut-mongo-sync:4.4.0")
}

application {
    mainClass.set("org.buildfest2022.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("org.buildfest2022.*")
    }
}

task setupQE(type:JavaExec) {
    classpath = sourceSets.main.runtimeClasspath

    main = "org.buildfest2022.qe.MakeDataKeyAndCollection"
}

task testQE(type:JavaExec) {
    classpath = sourceSets.main.runtimeClasspath

    main = "org.buildfest2022.qe.InsertEncryptedDocument"
}